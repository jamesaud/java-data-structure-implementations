1. Djikstra: 
   S: set of vertices for which the shortest path length from s is known.
   Initialize:
       S to {},
       set dist[s] to 0 for the source node,
       set dist[v] to infinity for all other nodes v
   Repeat until S contains all vertices connected to s:
      * find edge e connecting u in S and v in S' (u-v)
        that minimizes dist[u] + e.weight() [how?]
      * relax along that edge (update dist[i] for every neighbor of v)
      * add v to S

     We need to "inverse" Djikstra's algorithem so that we are starting at the outside nodes and work our way inside to the source node.
     Instead of starting at our source node like in Djikstra's, we would be adding every node that is not our source to the set of unchecked nodes.
     Then, we would check for each node if it has a relation to the source node. If it does, we would update the distance and remove from the unchecked nodes.
     After we pass through once, we would pass through again and see if the remaining nodes have a relation with our updated nodes.
     Repeat until the unchecked nodes is empty.

2.  3->2, 2->4, 2->1, 1->6, 6->5

3. These edges form a tree, as we have all edges in our collection. However, this tree is not necessarily an MST. 
	For example, we might have a->b and b->c, so we might conclude that a->b->c is the shortest path from a to c.
	However, this conclusion could be wrong if a->c exists directly at a lower cost - therefor not necessarily an MST.

4. I am unclear on how to access this paper to write an abstract. 
The "check access" option did not yield anything, and we are surely not expected to purchase it for $35?
-------------------
In the paper “Functional brain network analysis using minimum spanning trees in Multiple Sclerosis: An MEG source-space study”, the most effective technique used to analyze an MS brain is with Graph theory. Specifically, the MST technique (minimum spanning tree) with a weighted graph is used to model the brain. The edges are the weights of the fluctuation in the neural network, and there is suggestive meaning if the MST fits the criteria of the “strong disorder limit”.
The three stated reasons of this investigation, according to the paper, are as follows: to detect network changes in MST patients, attempt to draw a correlation to these changes with cognitive dysfunction, and lastly to understand if these changes “correspond to functional brain networks in RRMS” (page 2).

The conclusions drawn from the analysis suggest a relation between cognitive performance and the MST model of the brain. It is suggestive that MST can be used as a tool for analyses of MS patients – the conclusion suggests that “loss of hierarchical structure, are related to cognitive performance in MS” (page 1). 

The prior graph methods yielded poorer results, because “they suffer from methodological difficulties when comparing different groups” (page 3). It seems that a variety of factors, including the size of the network, amount of nodes, and amount of edges all are factors that make it difficult to normalize and compare networks. Other methods, like using fixed nodes or weighted graphs, didn’t yield meaningful results. It turns out that the MST of the original graphs formed the best method of analyzing the data, because the MST always has N nodes, therefore allowing direct comparison of the graphs.

It is interesting that an MST is the best measure for brain topology in this case. In fact, it must be suggestive of a certain type of relationship that neural networks express. In MS, the study finds a loss of a hierarchical structure in MS patients. It seems very interesting there is a relationship of a hierarchical structure present in neural networks in the first place, and that the degradation of MST’s in the networks causes neurological disorders.


